/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useRef } from "react";
import { defaultAgentData } from "./agentData";
import { circularMotion } from "./flight";

function PaperBoid({
  position,
  showVisibility = false,
  motion = circularMotion,
  agentData = defaultAgentData,
}) {
  const { nodes } = useGLTF("/round-plane.glb");
  const ref = useRef<THREE.Mesh>(null!);
  const cone = useRef<THREE.Mesh>(null!);

  useFrame((state) => {
    motion({ ref, goal: [state.pointer.x, state.pointer.y] });
  });

  return (
    <mesh
      userData={agentData}
      ref={ref}
      geometry={nodes.Plane002.geometry}
      rotation={[-Math.PI / 2, -Math.PI / 2, 0]}
      position={position}
      scale={2}
    >
      <meshPhysicalMaterial color="turquoise" />
      {ref?.current?.userData.debug && (
        <mesh ref={cone} rotation={[-Math.PI / 2, 0, 0]} position={[0, 0, 20]}>
          <coneBufferGeometry
            args={[40, agentData.visibility, 12]}
            transparent
          />
          <meshBasicMaterial
            color={"red"}
            opacity={0.1}
            transparent
            wireframe
          />
        </mesh>
      )}
    </mesh>
  );
}

useGLTF.preload("/round-plane.glb");

export default PaperBoid;
